:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  
  /* Enhanced color palette and variables */
  --primary-color: #4a6bff;
  --primary-hover: #3a5aee;
  --secondary-color: #ff6b4a;
  --secondary-hover: #ee5a3a;
  --accent-color: #6b4aff;
  --success-color: #4aff6b;
  --warning-color: #ffb74a;
  --error-color: #ff4a6b;
  
  --bg-dark: #1a1a2e;
  --bg-dark-accent: #242440;
  --bg-light: #f8f9fa;
  --bg-light-accent: #e9ecef;
  
  --text-dark: #121420;
  --text-medium: #4a4b53;
  --text-light: rgba(255, 255, 255, 0.92);
  
  /* Enhanced visual effects */
  --transition-fast: 0.2s;
  --transition-normal: 0.3s;
  --transition-slow: 0.5s;
  
  --box-shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.1);
  --box-shadow-md: 0 4px 8px rgba(0, 0, 0, 0.12);
  --box-shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.15);
  --box-shadow-inset: inset 0 2px 4px rgba(0, 0, 0, 0.1);
  
  --border-radius-sm: 4px;
  --border-radius-md: 8px;
  --border-radius-lg: 12px;
  --border-radius-xl: 20px;
  --border-radius-full: 9999px;
  
  /* Gradients */
  --gradient-primary: linear-gradient(120deg, var(--primary-color), var(--accent-color));
  --gradient-secondary: linear-gradient(120deg, var(--secondary-color), var(--warning-color));
  --gradient-dark: linear-gradient(135deg, var(--bg-dark), var(--bg-dark-accent));
  
  color-scheme: light dark;
  color: var(--text-light);
  background-color: var(--bg-dark);

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  transition: all var(--transition-normal) ease;
}

a {
  font-weight: 500;
  color: var(--primary-color);
  text-decoration: none;
  transition: color var(--transition-fast) ease, transform var(--transition-fast) ease;
  position: relative;
}

a:hover {
  color: var(--primary-hover);
  transform: translateY(-1px);
}

a:active {
  transform: translateY(0);
}

/* Fancy link underline animation */
a.animated-link::after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: -2px;
  left: 0;
  background: var(--gradient-primary);
  transition: width var(--transition-normal) ease;
}

a.animated-link:hover::after {
  width: 100%;
}

body {
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
}

h1, h2, h3, h4, h5, h6 {
  line-height: 1.2;
  margin-bottom: 1rem;
  font-weight: 600;
}

h1 {
  font-size: clamp(2rem, 5vw, 3.2em);
}

button {
  border-radius: var(--border-radius-md);
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: var(--primary-color);
  color: white;
  cursor: pointer;
  transition: all var(--transition-normal) cubic-bezier(0.165, 0.84, 0.44, 1);
  box-shadow: var(--box-shadow-sm);
  position: relative;
  overflow: hidden;
}

button:hover {
  border-color: var(--primary-hover);
  transform: translateY(-3px);
  box-shadow: var(--box-shadow-md);
}

button:active {
  transform: translateY(-1px);
}

button:focus,
button:focus-visible {
  outline: 3px solid rgba(74, 107, 255, 0.5);
  outline-offset: 1px;
}

/* Button ripple effect */
button.ripple {
  position: relative;
  overflow: hidden;
}

button.ripple::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.5);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%, -50%);
  transform-origin: 50% 50%;
}

button.ripple:focus:not(:active)::after {
  animation: ripple 0.6s ease-out;
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  100% {
    transform: scale(150, 150);
    opacity: 0;
  }
}

/* Card hover effects */
.card-hover {
  transition: transform var(--transition-normal) cubic-bezier(0.165, 0.84, 0.44, 1),
              box-shadow var(--transition-normal) cubic-bezier(0.165, 0.84, 0.44, 1);
}

.card-hover:hover {
  transform: translateY(-5px);
  box-shadow: var(--box-shadow-lg);
}

/* Responsive container class */
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

/* Enhanced utility classes */
.text-center { text-align: center; }
.text-left { text-align: left; }
.text-right { text-align: right; }

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@keyframes slideDown {
  from { transform: translateY(-20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@keyframes slideInLeft {
  from { transform: translateX(-20px); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes slideInRight {
  from { transform: translateX(20px); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

/* Animation utility classes */
.animate-fadeIn { animation: fadeIn var(--transition-normal) ease forwards; }
.animate-slideUp { animation: slideUp var(--transition-normal) ease forwards; }
.animate-slideDown { animation: slideDown var(--transition-normal) ease forwards; }
.animate-slideInLeft { animation: slideInLeft var(--transition-normal) ease forwards; }
.animate-slideInRight { animation: slideInRight var(--transition-normal) ease forwards; }
.animate-pulse { animation: pulse 2s infinite; }

/* Delay utilities */
.delay-100 { animation-delay: 100ms; }
.delay-200 { animation-delay: 200ms; }
.delay-300 { animation-delay: 300ms; }
.delay-400 { animation-delay: 400ms; }
.delay-500 { animation-delay: 500ms; }

@media (prefers-color-scheme: light) {
  :root {
    color: var(--text-dark);
    background-color: var(--bg-light);
  }
  button {
    background-color: var(--primary-color);
  }
}
